<?php

/**
 * @file
 *   Hosting CiviCRM API functions, and Drupal hooks.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hosting_civicrm_form_site_node_form_alter(&$form, &$form_state) {
  // Display the CiviCRM version
  if (! empty($form['#node']->nid)) {
    if ($form['#node']->civicrm_version) {
      $form['info']['civicrm_version'] = array(
        '#type' => 'item',
        '#title' => t('CiviCRM version'),
        '#value' => $form['#node']->civicrm_version,
        '#required' => FALSE,
      );
    }

    if ($form['#node']->civicrm_version && $form['#node']->civicrm_sitekey) {
      $form['civicrm_sitekey'] = array(
        '#type' => 'textfield',
        '#title' => t('CiviCRM site key'),
        '#default_value' => $form['#node']->civicrm_sitekey,
        '#required' => FALSE,
        '#weight' => 11,
      );
    }
  }
}

/**
 * Implements hook_nodeapi().
 */
function hosting_civicrm_nodeapi(&$node, $op) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'load':
        // Get the CiviCRM package version from the platform.
        $query = 'SELECT max(version) as civicrm_version
                    FROM hosting_package_instance hpi
                    LEFT JOIN hosting_package pkg ON (pkg.nid = hpi.package_id)
                   WHERE platform = :platform
                     and short_name = :short_name
                     and status = 1';

        if ($result = db_query($query, array(':platform' => $node->platform, ':short_name' => 'civicrm'))->fetchField()) {
          $node->civicrm_version = $result;
        }

        // Get the CiviCRM site key
        $node->civicrm_sitekey = db_result(db_query('SELECT civicrm_sitekey FROM hosting_site WHERE nid = %d', $node->nid));

        break;

      case 'view':
        if (isset($node->civicrm_version)) {
          $node->content['info']['civicrm_version'] = array(
            '#type' => 'item',
            '#title' => t('CiviCRM version'),
            '#value' => $node->civicrm_version,
          );
        }

        if (isset($node->civicrm_version) && isset($node->civicrm_sitekey)) {
          $node->content['info']['civicrm_sitekey'] = array(
            '#type' => 'item',
            '#title' => t('CiviCRM site key'),
            '#value' => $node->civicrm_sitekey,
          );
        }
        break;

      case 'update':
      case 'insert':
        $sitekey = $node->civicrm_sitekey;

        if (empty($sitekey)) {
          // Adapted from civicrm/install/civicrm.php
          $sitekey = md5(rand() . mt_rand() . rand() . uniqid('', TRUE) . $params['baseURL']);
        }

        db_query('UPDATE {hosting_site} SET civicrm_sitekey = "%s" WHERE nid = %d', $sitekey, $node->nid);
        break;
    }
  }
}

/**
 * Return the number of sites where CiviCRM is available
 */
function hosting_civicrm_site_count() {
  $platforms = hosting_civicrm_get_platforms();

  $count = 0;
  foreach ($platforms as $key => $nid) {
    $count += hosting_site_count($nid);
  }

  return $count;
}

/**
 * Return an array of active platforms that contain CiviCRM.
 */
function hosting_civicrm_get_platforms() {
  // Find the package ID for CiviCRM, which is unique accros all platforms.
  $package_id = db_query('SELECT nid FROM {hosting_package} WHERE short_name = :short_name', array(':short_name' => 'civicrm'))->fetchField();

  // Find active platforms that have the package_id.
  $result = db_query('SELECT DISTINCT nid FROM {hosting_platform} pl
                       INNER JOIN {hosting_package_instance} pkg ON (pl.nid = pkg.platform)
                       WHERE pkg.package_id = :package_id
                         AND pl.status = :status', array(
    ':package_id' => $package_id,
    ':status' => HOSTING_PLATFORM_ENABLED,
  ));

  $platforms = array();

  foreach ($result as $record) {
    $platforms[] = $record->nid;
  }
  return $platforms;
}

/**
 * Return an array of enabled sites capable of running CiviCRM
 *
 * @param $order_by
 *   Field to order the returned sites by.
 */
function hosting_civicrm_get_sites($order_by = null) {
  $platforms = hosting_civicrm_get_platforms();
  $sites = array();

  foreach ($platforms as $platform) {
    //get all the enabled sites on the platform
    if (isset($order_by)) {
      $result = db_query('SELECT n.nid FROM {node} n LEFT JOIN {hosting_site} s ON n.nid=s.nid WHERE n.type="site" and s.status = :status and s.platform = :platform ORDER BY :orderby ASC', array(
        ':platform' => $platform,
        ':status' => HOSTING_SITE_ENABLED,
        ':orderby' => $order_by
      ));
    }
    else {
      $result = db_query('SELECT n.nid FROM {node} n LEFT JOIN {hosting_site} s ON n.nid=s.nid WHERE n.type="site" and s.status = %d and s.platform=%d', array(':platform' => $platform, ':status' => HOSTING_SITE_ENABLED));
    }

    foreach ($result as $record) {
      $sites[] = $record->nid;
    }
  }

  return $sites;
}

/**
 * Helper function to determine whether a platform contains CiviCRM
 */
function _is_civicrm_platform($nid) {
  return in_array($nid, hosting_civicrm_get_platforms());
}

/**
 * Helper function to determine the version of CiviCRM available.
 * DEPRECATED c.f. #2335909
 * Remove after 2015-05-01.
 */
function hosting_civicrm_get_version() {
  //TODO: confirm this is returning the proper version for our platform, etc.
  // @see: hosting_civicrm_form_site_node_form_alter()
  $package = hosting_package_instance_load(array('short_name' => 'civicrm'));
  return $package->version;
}
